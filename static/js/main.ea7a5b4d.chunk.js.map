{"version":3,"sources":["utility/Header.jsx","utility/Modal.jsx","components/login/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","this","props","title","hasToken","onClick","href","PureComponent","Modal","className","style","display","showModal","e","stopPropagation","children","Login","onChange","onSubmit","name","msg","required","pattern","type","value","color","App","state","roles","randomChampions","summonerName","toggleModal","bind","saveSummonerName","logout","localStorage","getItem","setState","rollChampions","modal","target","preventDefault","test","setItem","console","log","divs","map","champ","index","key","rerollChampion","src","process","image","alt","champs","length","element","rollChampion","someChampIsSame","push","random","Math","floor","Object","keys","champions","data","full","array","newChamp","some","currChamp","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ea7a5b4d.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\n\nexport default class Header extends PureComponent {\n    render() {\n        let { hasToken, title, onClick } = this.props;\n        return (\n            <div>\n                <h1>\n                    <a href=\"/\">\n                        {title}\n                    </a>\n\n                </h1>\n                {/* <div className=\"navigation-header\">\n                    <div className=\"button\" onClick={onClick}>{hasToken ?'Remove summoner' : 'Choose summoner'}</div>\n                </div> */}\n            </div>\n\n        )\n    }\n}\n","import React, { PureComponent } from 'react'\n\nexport default class Modal extends PureComponent {\n    render() {\n        return (\n            <div className=\"modal\" style={{ display: this.props.showModal ? '' : 'none' }} onClick={this.props.onClick}>\n                <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { PureComponent } from 'react'\nimport './Login.css'\n\nexport default class Login extends PureComponent {\n    render() {\n        let {onChange, onSubmit, name, msg } = this.props\n        return (\n            <form className=\"login-container\" onSubmit={onSubmit}>\n                <div className=\"login-input\">\n                    <label>\n                        Summoner name:\n                        <input required pattern={/^[0-9a-z _.]+$/} type=\"text\" name=\"summonerName\" onChange={onChange} value={name}></input>\n                    </label>\n                </div>\n                {\n                    msg\n                    &&\n                    <span style={{color:'red'}}>{msg}</span>\n                }\n                <input type=\"submit\" onClick={onSubmit} value=\"Save\"></input>\n            </form>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport champions from './champion.json'\nimport Header from './utility/Header';\nimport Modal from './utility/Modal';\nimport Login from './components/login/Login';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\troles: [\"Top\", \"Jungle\", \"Mid\", \"Bottom\", \"Support\"],\n\t\t\trandomChampions:[],\n\t\t\tshowModal:'',\n\t\t\tsummonerName:''\n\t\t}\n\t\tthis.toggleModal = this.toggleModal.bind(this)\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.saveSummonerName = this.saveSummonerName.bind(this);\n\t\tthis.logout = this.logout.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tlet summonerName = localStorage.getItem('summonerName')\n\t\tthis.setState({\n\t\t\trandomChampions:this.rollChampions(5),\n\t\t\tsummonerName: summonerName !== 'undefined' ? summonerName : ''\n\t\t}) \n\t}\n\ttoggleModal(modal) {\n\t\tthis.setState({\n\t\t\tshowModal: modal\n\t\t})\n\t}\n\tonChange(e){\n\t\tthis.setState({\n\t\t\t[e.target.name]:e.target.value\n\t\t})\n\t}\n\tsaveSummonerName(e){\n\t\te.preventDefault();\n\t\tif(/^[0-9a-z _.]+$/.test(this.state.summonerName)){\n\t\t\tlocalStorage.setItem('summonerName', this.state.summonerName);\n\t\t\tthis.toggleModal('');\n\t\t\tthis.setState({msg:''})\n\t\t}\n\t\telse{\n\t\t\tthis.setState({\n\t\t\t\tmsg:'Invalid summoner name'\n\t\t\t})\n\t\t}\n\n\t}\n\tlogout(){\n\t\tconsole.log('asdsa')\n\t\tlocalStorage.setItem('summonerName', '')\n\t\tthis.setState({\n\t\t\tsummonerName:''\n\t\t})\n\t}\n\n\trender() {\n\t\tlet { randomChampions, showModal, summonerName, msg } = this.state;\n\t\tlet divs = randomChampions.map((champ, index) => {\n\t\t\treturn (\n\t\t\t\t<div key={champ.name} className=\"champion-list-item\" onClick={() => this.rerollChampion(index)}  >\n\t\t\t\t\t<span>{champ.name}</span>\n\t\t\t\t\t<img src={`${process.env.PUBLIC_URL}/champion/${champ.image}`} alt=\"champion\"></img>\n\t\t\t\t\t<span>{this.state.roles[index]}</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<div className=\"App\" >\n\t\t\t\t<Header title=\"All Random All Fill\" onClick={() => !!summonerName ? this.logout() : this.toggleModal('login')} hasToken={!!summonerName}></Header>\n\t\t\t\t<div className=\"champion-list\" >\n\t\t\t\t\t{divs}\n\t\t\t\t</div>\n\t\t\t\t<footer className=\"footer\">\n\t\t\t\t\tYou can now reroll a champion by clicking the image of the one you want to change.\n\t\t\t\t</footer>\n\t\t\t\t{\n\t\t\t\t\tshowModal === 'login' &&\n\t\t\t\t\t<Modal showModal={showModal}>\n\t\t\t\t\t\t<Login onChange={this.onChange} onSubmit={this.saveSummonerName} msg={msg}></Login>\n\t\t\t\t\t</Modal>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\n\n\trollChampions() {\n\t\tlet champs = []\n\t\twhile(champs.length < 5){\n\t\t\tlet element = this.rollChampion();\n\t\t\t\n\t\t\tif(!this.someChampIsSame(champs, element))\n\t\t\t\tchamps.push(element)\n\t\t}\n\t\treturn champs\n\t}\n\n\n\n\trollChampion(){\n\t\tvar random = Math.floor(Math.random() * Object.keys(champions.data).length);\n\t\tvar key = Object.keys(champions.data)[random];\n\t\tvar element = champions.data[key];\n\t\treturn {name: element.name, image: element.image.full}\n\t}\n\n\tsomeChampIsSame(array, newChamp){\n\t\treturn array.some(champ => champ.name === newChamp.name)\n\t}\n\t\n\trerollChampion(index){\n\t\tlet { randomChampions } = this.state;\n\t\tlet currChamp = randomChampions[index];\n\t\tlet newChamp = currChamp;\n\t\t\n\t\twhile(newChamp === currChamp || this.someChampIsSame(randomChampions, newChamp)){\n\t\t\tnewChamp = this.rollChampion()\n\t\t}\n\t\trandomChampions[index] = newChamp\n\t\tthis.setState({\n\t\t\trandomChampions\n\t\t})\n\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}